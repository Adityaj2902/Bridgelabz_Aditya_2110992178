
=> Array Problems
1)Find the Largest Sum Contiguous Subarray
Given an integer array, find the contiguous subarray that has the largest sum and return that sum.

2) Move Zeroes
Given an array, move all zeros to the end of the array while maintaining the relative order of the non-zero elements.

3) Find Duplicate Elements
Given an array of integers, find the elements that appear more than once.

4) Rotate an Array
Given an array and a number k, rotate the array to the right by k steps.

5) Find the Missing Number
Given an array of size n, containing numbers from 1 to n+1, find the missing number.

6) Product of Array Except Self
Given an array, return an array such that each element is the product of all elements of the array except the element at the current index.

7) Find Pair with Given Sum
Given a sorted array and a sum, find two elements that add up to the sum.

8) Find Maximum Product of Three Numbers
Given an integer array, find the maximum product of any three numbers.

9) Subarray with Given Sum
Given an array and a target sum, find the continuous subarray whose sum equals the given target.

10) Longest Increasing Subsequence
Given an array of integers, find the length of the longest increasing subsequence.

=> Linked List Problems
1) Reverse a Linked List
Given a linked list, reverse it and return the head of the reversed list.

2) Detect a Cycle in a Linked List
Given a linked list, determine if it has a cycle in it.

3) Merge Two Sorted Linked Lists
Given two sorted linked lists, merge them into a single sorted list.

4) Find the Middle Element of a Linked List
Given a linked list, find the middle element.

5) Remove N-th Node from End of List
Given a linked list and an integer n, remove the n-th node from the end of the list.

6) Add Two Numbers Represented by Linked Lists
Given two linked lists representing two non-negative integers, add the numbers and return the result as a linked list.

7) Palindrome Linked List
Given a linked list, check if it is a palindrome.

8) Intersection of Two Linked Lists
Given two singly linked lists, determine if they intersect and find the intersecting node.

9) Flatten a Multilevel Doubly Linked List
Flatten a multilevel doubly linked list to a single level doubly linked list.

10) Rearrange a Linked List
Given a linked list, rearrange it in the following order: first element, last element, second element, second last element, and so on.

==> Stack Problems
1) Implement a Stack Using Queues
Implement a stack using two queues. The basic operations (push, pop, top, empty) should be supported.

2) Balanced Parentheses
Given a string containing parentheses, check if the parentheses are balanced.

3) Evaluate Reverse Polish Notation
Evaluate the value of an arithmetic expression in Reverse Polish Notation.

4) Next Greater Element
Given an array, for each element, find the next greater element in the array using a stack.

5) Min Stack
Implement a stack that supports push, pop, top, and retrieving the minimum element in constant time.

6) Sort a Stack
Given a stack, sort it in ascending order using another stack.

7) Largest Rectangle in Histogram
Given an array representing heights of bars in a histogram, find the area of the largest rectangle in the histogram.

8) Valid Parentheses with Multiple Types
Given a string containing parentheses of multiple types (round, square, curly), check if the string has valid parentheses.

9) Stock Span Problem
Given an array of stock prices, return the span of stock prices for each day.

10) Implement a Stack with Push and Pop Operations in Constant Time
Design a stack that supports constant time operations for push, pop, top, and getMin.

==> Queue Problems
1) Implement a Queue Using Stacks
Implement a queue using two stacks. The basic operations (enqueue, dequeue, front, empty) should be supported.

2) Circular Queue
Implement a circular queue where the enqueue and dequeue operations are performed in constant time.

3) Queue Reversal
Given a queue, reverse its elements using a stack.

4) Sliding Window Maximum
Given an array and a sliding window of size k, find the maximum for each sliding window.

5) Generate Binary Numbers from 1 to N
Given a number N, generate binary numbers from 1 to N using a queue.

6) Implement a Priority Queue
Implement a priority queue using a heap.

7) Design a Data Stream for Median Finding
Design a data structure that supports inserting integers into a stream and retrieving the median at any point.

8) Task Scheduling
Given a list of tasks and their deadlines, determine if the tasks can be completed before their deadlines.

9) Reverse First K Elements of a Queue
Given a queue and an integer k, reverse the first k elements of the queue.

10) Zombie Apocalypse
You are given a grid representing a city. Zombies are located in some cells, and humans are located in others. Zombies spread to adjacent cells in all directions in 1 minute. Find the minimum time it takes for all humans to become zombies using a queue.

==> Hash Table Problems
1) Two Sum  (Done)
Given an array of integers and a target, return the indices of the two numbers that add up to the target.

2) Group Anagrams(Done)
Given a list of strings, group anagrams together.

3) Longest Substring Without Repeating Characters(Done)
Given a string, find the length of the longest substring without repeating characters.

4) Find All Duplicates in an Array(Done)
Given an array, find all elements that appear twice.

5) Subarray Sum Equals K
Given an array and a target sum k, find the number of subarrays that sum up to k.

6) Top K Frequent Elements
Given an array, return the k most frequent elements.

7) First Unique Character in a String
Given a string, find the first non-repeating character.

8) Intersection of Two Arrays
Given two arrays, find their intersection.

9) Find the Contiguous Subarray with the Largest Product
Given an integer array, find the contiguous subarray which has the largest product.

10) Valid Anagram
Given two strings, determine if one is an anagram of the other.

==> Tree Problems
1) Binary Tree Inorder Traversal
Given a binary tree, return the inorder traversal of its nodes' values.

2) Symmetric Tree
Check if a given binary tree is symmetric around its center.

3) Lowest Common Ancestor of a Binary Search Tree
Given a binary search tree, find the lowest common ancestor of two given nodes.

4) Path Sum
Given a binary tree and a sum, check if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

5) Convert Sorted Array to Binary Search Tree
Convert a sorted array to a height-balanced binary search tree.

6) Flatten Binary Tree to Linked List
Flatten a binary tree into a linked list in place.

7) Max Depth of Binary Tree
Find the maximum depth of a binary tree.

8) Count Complete Tree Nodes
Given a complete binary tree, count the number of nodes in it.

9) Binary Search Tree Iterator
Implement an iterator for a binary search tree that returns the next smallest number.

10) Diameter of a Binary Tree
Find the diameter of a binary tree. The diameter is the longest path between any two nodes in a tree.

==> Graph Problems
1) Breadth-First Search (BFS)
Perform a breadth-first search on a graph starting from a given node.

2) Depth-First Search (DFS)
Perform a depth-first search on a graph starting from a given node.

3) Number of Islands
Given a grid of 1s (land) and 0s (water), find the number of islands (connected 1s).

4) Clone Graph
Given a graph, clone the graph and return the deep copy.

5) Detect a Cycle in a Directed Graph
Given a directed graph, detect whether it contains a cycle.

6) Find the Shortest Path in a Graph
Given a weighted graph, find the shortest path between two nodes using Dijkstra's algorithm.

7) Topological Sort
Given a directed acyclic graph (DAG), return a topological ordering of the vertices.

8) Flood Fill
Given a 2D grid, fill a region with a new color, where the region is defined by adjacent connected cells.

9) Shortest Path in a Maze
Given a maze with walls and open spaces, find the shortest path from the start to the end.

10) Graph Valid Tree
Given n nodes and a list of edges, determine if the graph forms a valid tree.